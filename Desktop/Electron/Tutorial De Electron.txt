
__________________________________________________________________________________________________________________________________
INSTALL

TEMPLATE ================> https://electron-react-boilerplate.js.org/docs/building

git clone --depth 1 --branch main https://github.com/electron-react-boilerplate/electron-react-boilerplate.git your-project-name
cd your-project-name
npm install

>> npm start
__________________________________________________________________________________________________________________________________

INSTAL TALWINDS ===> https://blog.saeloun.com/2023/02/24/integrate-tailwind-css-with-electron/
                     >> yarn add autoprefixer
                     >> yarn add tailwindcss
                     >> yarn add postcss-loader --save-dev


VERIFAR TAILWIND ===>     <div className="bg-blue-500 text-white p-4">Hola, mundo!</div>

__________________________________________________________________________________________________________________________________



OTRA INSTALL

https://www.youtube.com/watch?v=oAaS9ix8pes&list=WL&index=366

>> npm install -g concurrently =========================> Tener instaldo GLOBAL esto.
>> concurrently --version

>> yarn upgrade   =================================> Actulizar Dependencias del proyecto

--

>> npx create-react-app proyecto-electron-0_0_0
>> cd proyecto
>> yarn install
>> yarn add cross-env
>> yarn add wait-on


* en pacakage.json:
  "scripts": {
 ..
    "electron:serve": "concurrently -k \"cross-env BROWSER=none yarn start\" \"yarn electron:start\"",
    "electron:build": "yarn build && electron-builder -c.extraMetadata.main=build/main.js",
    "electron:start": "wait-on tcp:3000 && electron ."

>> yarn add @electron/remote   ====================> Adicionar Puente

>> yarn electron:serve   ========================> RUN


>> yarn build   =======================> EXE

>> yarn upgrade react-scripts  =================================> Actulizar Dependencias del proyecto

>> yarn start --reset-cache     ==================================>  CACHE

----
Webpack
D:\Proyectos\Electron\guatt-electron-0_0_0\node_modules\react-scripts\config\webpackDevServer.config.js
ERROR : https://bobbyhadz.com/blog/deprecationwarning-onaftersetupmiddleware-option-is-deprecated
------------------------------
INSTALL TALWIND en React
 https://tailwindcss.com/docs/guides/create-react-app
------------------------------

FLOWBITE ==>https://flowbite.com/docs/getting-started/introduction/
ICONS ==> https://heroicons.dev/
__________________________________________________________________________________________________________________________________
Ejemplo:
TEMPLATE ================> https://electron-react-boilerplate.js.org/docs/building

git clone --depth 1 --branch main https://github.com/electron-react-boilerplate/electron-react-boilerplate.git your-project-name
cd your-project-name
npm install
__________________________________________________________________________________________________________________________________



INSTALAR:

 yarn add axios
 yarn add express

 yarn add typeorm mssql

 yarn add dotenv

 yarn add electron-store

 yarn add react-router-dom
 yarn add react-hot-toast    ====> https://react-hot-toast.com/docs Y https://github.com/timolins/react-hot-toast

 yarn add zustand   =======> https://www.npmjs.com/package/zustand

 yarn add react-hook-form =====>  https://www.npmjs.com/package/react-hook-form Y https://react-hook-form.com/

 yarn add -dev tailwindcss postcss-loader autoprefixer

yarn add path-browserify
yarn add browserfs










-------------------------INSTALL SQL LITE -------------------
>> cd ./release/app

>>npm install sqlite3 typeorm

$ npm run rebuild && npm run link-modules
>> yarn run rebuild && yarn run link-modules


crear ===> mydatabase.sqlite

* en >> cd ./release/app
-crear ormconfig.json ===>colocar:

{
  "type": "sqlite",
  "database": "path/to/your/sqlite/database.sqlite",
  "entities": [
    "src/entities/**/*.js"
  ],
  "synchronize": true
}
----------------------------------------------------------




------------------- -- STORAGE LOCAL -------------------
>> yarn add electron-store


const { app } = require('electron');
const Store = require('electron-store');

// Inicializar el almacenamiento con una configuraci√≥n opcional
const store = new Store();

// Guardar un valor en el almacenamiento
store.set('clave', 'valor');

// Recuperar un valor del almacenamiento
const valor = store.get('clave');

// Eliminar un valor del almacenamiento
store.delete('clave');

// Eliminar todos los valores del almacenamiento
store.clear();

