  Fatz= Pipenv = https://www.youtube.com/watch?v=-XIsKyNWILo

  manual = https://platzi.com/tutoriales/1104-python/2292-pipenv-virtualenv-y-pip-en-un-solo-comando/



   PIPENV     -------------------------------> nuevo entorno virtual (para saltar versiones, en caso hubise un problema)

   
   >> python --version

   >> pip3 install pipenv

   >> pipenv shell         -------------------------------------------> crea entorno/activar, tambien aprece un archivo Pipfile

   >> exit                ----------------------------------------------> desactivar

   >> pipenv --rm         ----------------------------------------------> remover


   ej: instalar paquete:   >> pipen install colorama

     en Pipfile : aparece en [packages] (es para poduccion) . Y tambien para desarrollo [dev-packages]. Puedes instalar directamente dentro


   >> pipenv lock -r           ----------------------------------------------> ver paquetes

   >> pipenv uninstall colorama

   >> pipenv install django          o       crear arichivo requeriments.tx ==========> poner Danjo==2.1.2 y    >> pipen install -r requeriments.tx

   >> pipenv check        , se corrige y luego >> pipen install            -------------------------------------------------------> revision de problemas

   >> pipenv lock                  --------------------------------------------------------------------> actualiza para deploy

   >> pipenv  install --ignore-pipfile             -----------------------------------------------------> en caso de problemas packetes ignora



***********************************************************************************************************************************************************************


   DJANGO + VUE.js

    Django + Vue.js = codigo facilito = https://www.youtube.com/watch?v=WbAqnp-zqPU&list=PLpOqH6AE0tNh7-Z-Lka9e0hRA2OdNB0dx&index=2



   .... despues de instalar entorno , statproyect y apps

   1. >> pip  install django djangorestframework

   2. en settings.py :                ------------------------------------------------------------------------------> registrar aplicacion

     INSTALED_APP = [

        'rest_framework',

   3. El proyecto crear:


       3.1 serializers.py:             -----------------------------------------------------------------------------------> JSON


             from .models import Mimodelo
             from rest_framework import serializers

                  class NombreSerializer(serializers.ModelSerializer):
                       class Meta:
                           model Mimodelo
                           fields= '_all_'



       3.2 viewsets.py:               -------------------------------------------------------------------------------------------> Consumir API

                    from rest_framework import viewsets
                    from .model import Mimodelo
                    from serializer import NombreSerializer
                    
                    class NombreViewSet(viewsets.Models.ViewSet):
                      queryset= Mimodelo.objects.all();
                      serializer_class = NombreSerializaer


      3.3 urls.py:                                 -----------------------------------------------------------------------------> url api


                       from rest_framework import routers
                       from viewsets import NombreViewSets

                       router = routers.SimpleRouter()
                       router = register('nombres', NombreViewSet)          ---------------------------------------------------->Ej:  api/v1.0/nombres


                       urlpatterns = router.urls


     4. En urls.py del proyecto:                    ---------------------------------------------------------------------------> registrar


           urlpatterns=[

              path('api/v1.0/' include('nombreapp.urls'))

                  


                 
 

                    







