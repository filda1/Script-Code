  //html
  instalar en Visual Code : Vetur y Vue 2 Snippets

https://cli.vuejs.org/
    
 INSTALACION

  1- Instalar NODE Ltc
  2 - En consola, en tu proyecto:  npm install -g @vue/cli
  3 - Comprobar:  vue --version

  * vue create hello-world ( Por CLi) / o por,  vue ui

  4- Crear proyecto, Por Interfaz de usuario: vue ui

      - Ir Localhost:8000 :
                       * Crear proyecto
                       * npm
                       * Manual ===> eligir Router, Vuex, Babel y .... (Quitar Linter)


      - Ver Proyecto, Tareas ====> Serve ====> Ejecutar Tarea =======> espera circulo verde carge, clik

----------------------------------------------------------------------------------------------------------
  ESTRUCTURA HECHA
  
    * index.html (en public) ==========> Pagina principal, tiene id=app, que conecta con main.js (tiene la instacion new Vue)
    
    * App.vue (Componente Padre) ===> tiene todas etiquetas html (Hay que registar e importar componentes)

    * Componente X. vue  =======> export defaul == Vue.component


----------------------------------------------------------------------------------------------------------------------

   EJEMPLO DE LISTA DE FRUTAS, Click en cantida y oredena por cantidad

 


Lista.vue
 
  template: 
    `
     <div>
       <Button @click=" aumentar ">+</Button>
       <Button @click=" disminuir(2) ">-</Button>
       <Button @click=" ObtenerCursos ">Ver Cursos</Button>

        <ul v-if="frutas != []">

           <li v-for="(item,index) in arrayOrdena :Key="item.id" @click="aumentar(index)">
            {{ item.nombre }}
            <span> {{ item.cantidad }}</span> 
           </li>

        </ul>
         <button @click="reiniciar"> Reiniciar </button>
     </div>

     import {mapState,mapMutations} from 'vuex';

     expor defauld{

       name:'Lista';
         computed:  {     
                ....mapState(['frutas']),
                arrayOrdena (){
                  return this.frutas.sort ((a,b) => b.cantidad - a.cantidad)
                }

         },
         
         methods:    {     
                   ...mapMutations(['aumentar','reiniciar'])
              

        }
     }
  
       

           
  });

Store
  const store = new Vuex.Store({
     state: {
              frutas=[
                {nombre : 'Manzana', cantidad:0},
                {nombre : 'Pera', cantidad:0},
                {nombre : 'Naranja', cantidad:0}
              ]
            },

      mutations: {
                    aumentar(state, index) {
                                      state.frutas.cantidad++
                                    }
                  },

                   reiniciar (state){
                                     state.frutas.foreach( elemento =>{
                                       elemento.cantidad=0
                                     })
                                  }

       actions:  {
       
               }
  })



  
     






















               