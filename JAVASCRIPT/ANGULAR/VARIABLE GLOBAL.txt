  
EJEMPLO 1
----

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class GlobalService {
  private globalValue = new BehaviorSubject<any>(null);
  public globalValue$ = this.globalValue.asObservable();

  constructor(private http: HttpClient) {
    this.loadData();
  }

  loadData(): void {
    this.http.get('http://ejemplo.com/api/data').subscribe(data => {
      this.globalValue.next(data);
    });
  }
}


---

import { Component } from '@angular/core';
import { GlobalService } from './global.service';

@Component({
  selector: 'app-my-component',
  template: '<p *ngIf="globalValue$ | async as globalValue">{{globalValue}}</p>',
})
export class MyComponent {
  public globalValue$ = this.globalService.globalValue$;

  constructor(private globalService: GlobalService) {}
}




EJEMPLO 2 = Otra Forma



 import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject, Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class GlobalService {
  private globalValue = new BehaviorSubject<any>(null);
  public globalValue$ = this.globalValue.asObservable();

  constructor(private http: HttpClient) {
    this.loadData();
  }

  loadData(): void {
    this.getClientOptionsBit().subscribe(data => {
      this.globalValue.next(data);
    });
  }

  public getClientOptionsBit(): Observable<any> {
    return this.http.get<any>('/api/v1/options/get-client-options-bit');
  }
}


---

import { Component } from '@angular/core';
import { GlobalService } from './global.service';

@Component({
  selector: 'app-my-component',
  template: '<p *ngIf="globalValue$ | async as globalValue">{{globalValue}}</p>',
})
export class MyComponent {
  public globalValue$ = this.globalService.globalValue$;

  constructor(private globalService: GlobalService) {}
}



EJEMPLO 3


import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class GlobalService {
  private globalValue = new BehaviorSubject<any>(null);
  public globalValue$ = this.globalValue.asObservable();

  constructor(private http: HttpClient) {
    this.loadData();
  }

  loadData(): void {
    this.http.get('http://ejemplo.com/api/data').subscribe(data => {
      this.globalValue.next(data);
    });
  }
}




import { Component, OnInit } from '@angular/core';
import { GlobalService } from '../global.service';

@Component({
  selector: 'app-my-component',
  template: '<p *ngIf="globalValue">{{globalValue}}</p>',
})
export class MyComponent implements OnInit {
  public globalValue: any;

  constructor(private globalService: GlobalService) {}

  ngOnInit(): void {
    this.globalService.globalValue$.subscribe(value => {
      this.globalValue = value;
    });
  }
}

