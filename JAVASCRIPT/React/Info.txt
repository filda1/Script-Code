 *********W3 ======>  https://www.w3schools.com/react/react_lists.asp


 memo   ======> evita rederenrizacion inecesaria del COMPONENTE
   * https://www.youtube.com/watch?v=sBA_SDhIPqQ

 useMemo ======>    NO Renderiza ==========> por Los componentes de Afuera
                   * LOS COMPONENTES IMPIDE O IGNORA  El componente que usa useMemo
                   * Los Otros Componentes se vuelven mas rapidos e ignoran al de Use Memo
                   * El Componente de useMemo al ser utlizado queda igual, que renderizar todo

                   RECARGA/RENDERIZA SOLO EL COMPONENTE Q NECESITA, NO TODA LA APLICACION ===== > RENDERIZACION INDEPENDIENTE de un componente/s

 useCallback ======> guarda una FUNCION

 useParam =========> Extrae parametros de url
 history ===========> obtiene todas nombres de la routes de la aplicacion


  Prop-Type =========> Valida la props o propiedades. Del Padre al Hijo.
                     *https://blog.koalite.com/2015/01/especificacion-de-tipos-en-reactjs-con-proptypes/

 useRef=============================> ACCEDE A DOM/INFO DEL COMPONENTE HTML  === ACCEDE Y TE SACA TODA INFORMACION DEL COMPONENTE HTML

                                            https://www.youtube.com/watch?v=raJjjm3rhhU

 forwardRef  =====================>  es una funciÃ³n auxiliar de React que nos permite reenviar la referencia de un componente a otro.
                                     https://runebook.dev/es/docs/react/forwarding-refs

 REact query  =====================> TIEMPO REAL de datos CON SERVIDOR  === SINCRONIZA SERVIDOR

 throttle-debounce  ==================> TEMPORIZADOR
                                           https://www.npmjs.com/package/throttle-debounce