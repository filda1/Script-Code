 https://www.youtube.com/watch?v=UPJsvlkYh9w&ab_channel=CodersFree

**********************************************************************************************
*                                                                                            *
*  Classes,Enum, FilterURL, Components,Validacion-error, str, snap, slug, redirectRoutes     *
*                                                                                            *
********************************************************************************************** 


1. --------------------------MUTADORES(TRansoforma en Mayu/Minuscual)   Y ACCESORES (Recupera y TRansoforma en Mayu/Minuscual) ---------------------------------

 User.php :

 use Illuminate\Database\Eloquent\Casts\Attribute;

 protected function name():Attribute    ====================> name es Campo de DB, Y Attribute( loque espero que devuelva)
  {      
    return new Attribute (
       get: fn ($value) => ucwords($value),          ==========> ACCesores;  En Mayusculas Letras iniciales ( Lo recupera De la BD, lo transforma, pero  no save BD)
       set: fn ($value) => strtolower($value),        ==========> Mutadores: Todo en Minuscula ( Save en BD)
    );
 };

----------
/////// MUTADORES ///////////////

 Web.php :

 Route::get('/', function() {
  $name = "ViCtOr ArAnaA";
  $pass = bcrypt("123456");

   $User = User::Create([
     'name' => $name;
     'password' => $pass;
   ]);

    return $User;
  });
  
   // SALIDA ==========> vitor arana


/////// ACESORRES ///////////////

 Web.php :

 Route::get('/', function() {
  
   $User = User::first();

    return $User;
  });
  
   // SALIDA ==========> Vitor Arana


2 -  CLASSES--------------------------------------------------------------------------------------


 Route::get('/', function() {
  
  class Color{
   const RED = '#ff0000';
   const GREEN = '#00d90000';
  }


   class Auto{
     protected $color;

     public function setColor($color){
       $this->color = $color;
     }

       public function getColor(){
         return $this->color;
     }
   }

    $auto = new Auto();
    //$auto->setColor('red');

    $auto->setColor(Color::RED);

    

    return $auto ->getColor();
  });


3- ENUM-------------------------------------------------------------------------------------------------


  
 Route::get('/', function() {
  
  enum Color:string     ============================> String, es tipo de dato que devuelve
{
   case RED = '#ff0000';
   case GREEN = '#00d90000';
  }

    public function Color():string
   {
         return match($this)
         {
           Color::RED => 'red',
            
     }


$color = Color::RED  
dd($color->value)   // ff0000

$color-> Color();  //red

----------------------------
En Carpeta : Enums ===> Poner el ejercicip Anterior

Lo puedes traer:

App\Enum\Color


$color = Color::RED  
dd($color->value)

* Cuando Guarda el Valor ENum en BD. Quieeres Traerlo depues en ENUM vas al MOdelo don esta guardado..

  protected $cast =[
   'color' => Color::class  (Tienes importar arriba El enum)
  ]

*Solo aceptar En ROUTES Enum
  App\Enum\category2

  Route::(categoria/{categoria}, function (Categoria2 $category){
    return $category->value;
  }

------------------------------------------------------------------------------------------------------
4- OBTENER DE LA URL LOS ID =======> Y Obtener OBJETO RELACIONADO


 Route::scopeBinding()->group( function (){    =======================================> scopeBindibg : es para relacion tenga sentido
  Route::get('users/{user_id}/posts/{post_id}', funtion(User $user, Post $post){
     return $post;
 } )
})