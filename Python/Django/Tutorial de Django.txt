***********************************************************************************************************************

    Corey Shafer =========> https://www.youtube.com/watch?v=UmljXZIypDc&list=PL-osiE80TeTtoQCKZ03TU5fNfx2UY6U4p&index=1
                            https://github.com/CoreyMSchafer/code_snippets/tree/master/Django_Blog

************************************************************************************************************************
NOTA: Python tiene admin y frontend incluido



    *   Donwload Python
    *   Terminal: pip install django
    *   python -m django --version
    *   django-admin nombreAdmin                 ==========================================> El Admin es el proyecto General que controla todo

    *   django-admin startproject nombreAdmin
    *   cd nombreapp/
    
    *   python manage.py runserver

    *   python manage.py startapp nombreApp      ==========================================> proyecto FRONTEND





 ***************************************************************************************************************************


    ESTRUCTURA carpetas/archivos:

       django-proyect     =====================================================> EL Admin (Controlo el proyecto general)
         urls.py          ====================================================================> Rutas principal
         settings.py
         ....


        Bloc              ======================================================> El proyecto 
         urls.py          ====================================================================> Sub -Rutas
         views.py         ==============================================================================================> View o Controller
         template         ===================================================================================================================> View
            blog
             base.html
             home.html
             about.html 
         static
             bloc
              main.css
         apps.py



       

    FUNCIONAMIENTO:
 
      1- EN ADMIN,
        urls.py:

                from django.contrib import admin
                from django.urls import path

                from django.contrib import admin
                from django.urls import path, include


                  urlpatterns = [
                    path('admin/', admin.site.urls),
                    path('', include('nombreApp.urls')),  ==================================================> RUTA PRINCIPAL
                  ]


      2- EN FRONTEND,
        urls.py:

                from django.urls import path
                from . import views

                urlpatterns = [

                path('', views.home, name='blog-home'),
                path('about/', views.about, name='blog-about'),      ========================================> SUb-Ruta (EJ: localhost:8000/about/)

                ]

      
         views.py  (Como View):                                                ============================================> Puede ser vista o Controller

                from django.shortcuts import render
                from django.http import HttpResponse


                def home(request):
                    return HttpResponse('<h1>Blog Home</h1>')


                def about(request):
                    return HttpResponse('<h1>Blog About</h1>')


        3. TEMPLATE:


                Crear Carpetas template y dentro bloc (dentro del proyecto Ej Bloc):

                3.1 Cconfigurar:

                  - En setting.py(admin) poner ===============>   INSTALLED_APPS = [
                                                                             'blog.apps.BlogConfig', ===================> aparece en app.py(Bloc )


               3.2  En views.py  (Como Controller) en Bloc: 


                from django.shortcuts import render
                from .models import Posts                ==============================> viene de la base de datos sqlite
                 posts = [
                                {
                                 'author': 'CoreyMS',
                                 'title': 'Blog Post 1',
                                 'content': 'First post content',    ========================> tambien viene puede venir de la base de datos SQLite
                                 'date_posted': 'August 27, 2018'
                                 },
    
                         ]


                       def home(request):
                          context = {
                                      'posts': posts  
                                      // 'posts': Post.objects.all()      ==========================> de la base de datos Sqlite
                                     }

                          return render(request, 'blog/home.html', context)     =====================> puedes pasae un lista de objetos a View


                       def about(request):

                         return render(request, 'blog/about.html', {'title': 'About'})    ===================> puedes pasar un variable a view




                 3.3 Views, dentro de (template =========> bloc):

                      base.html :

     
                      {% load static %}
                     <!DOCTYPE html>
                       <html>
                       <head>

                     <!-- Required meta tags -->
                        <meta charset="utf-8">
                        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

                         <!-- Bootstrap CSS -->
                      

                          <link rel="stylesheet" type="text/css" href="{% static 'blog/main.css' %}">

                          {% if title %}
                           <title>Django Blog - {{ title }}</title>
                           {% else %}
                           <title>Django Blog</title>
                            {% endif %}
                       </head> 

                         <body>
                                <a class="navbar-brand mr-4" href="{% url 'blog-home' %}">Django Blog</a>
                         </body>   



                             <div class="col-md-8">
                                  {% block content %}{% endblock %}  ==========================================> importa demas paginas que tiene una extension
                             </div>


                  
                        home.hml:

                          {% extends "blog/base.html" %}

                             {% block content %}
                                 {% for post in posts %}

                               <article class="media content-section">
                                 <div class="media-body">
                                 <div class="article-metadata">
                                 <a class="mr-2" href="#">{{ post.author }}</a>
                                 <small class="text-muted">{{ post.date_posted }}</small>
                               </div>
                                <h2><a class="article-title" href="#">{{ post.title }}</a></h2>
                              <p class="article-content">{{ post.content }}</p>
                              </div>
                            </article>

                               {% endfor %}

                          {% endblock content %}




                   4. CREAR ADMIN
                         terminal:
                                     *  python manage.py migrate
                                     *  python manage.py createsuperuser ...
                                     *  python manage.py runserver




                  5. BASE DE DATOS INTEGRADA (SQLITE3)


                  5.1 En proyecto/models.py:


                         from django.db import models
                         from django.utils import timezone
                         from django.contrib.auth.models import User


                        class Post(models.Model):
                               title = models.CharField(max_length=100)
                               content = models.TextField()
                               date_posted = models.DateTimeField(default=timezone.now)
                               author = models.ForeignKey(User, on_delete=models.CASCADE)

                         def __str__(self):
                           return self.title



                    5.2 terminal:
                    
                      >>> pythom manage.py makemigrations

                      >>> python manage.py sqlmigrate nombreproyecto numerodemigracion

                      >>> python manage.py shell  ========================================> puedes ingresar datos en tabla de Sqlite y accessos



      12. REGISTRO DE USUARIOS

         - CREAR CARPETA USER:    _________________________________________________________________> antes de todo registar setting.py

                  view.py:

                        from django.shortcuts import render, redirect
                           from django.contrib import messages
                           from .forms import UserRegisterForm


                          def register(request):
                                if request.method == 'POST':
                                     form = UserRegisterForm(request.POST)
                                      if form.is_valid():
                                       form.save()
                                         username = form.cleaned_data.get('username')
                                        messages.success(request, f'Account created for {username}!')
                                       return redirect('blog-home')
                               else:
                                         form = UserRegisterForm()
                                           return render(request, 'users/register.html', {'form': form})

            


                      >> install django-crispy-forms           ------------------------> Form mejorado (registralo en settings.py)



                       forms:

                           from django import forms
                                 from django.contrib.auth.models import User
                                   from django.contrib.auth.forms import UserCreationForm


                                       class UserRegisterForm(UserCreationForm):
                                         email = forms.EmailField()

                                                  class Meta:
                                                  model = User
                                                 fields = ['username', 'email', 'password1', 'password2']


                      template/users/register.html:



                                 {% extends "blog/base.html" %}
                                    {% load crispy_forms_tags %}
                                       {% block content %}
                                  <div class="content-section">
                                             <form method="POST">
                                                 {% csrf_token %}
                                              <fieldset class="form-group">
                                                <legend class="border-bottom mb-4">Join Today</legend>
                                               {{ form|crispy }}
                                               </fieldset>
                                    <div class="form-group">
                                       <button class="btn btn-outline-info" type="submit">Sign Up</button>
                                   </div>
                                   </form>
                                        <div class="border-top pt-3">
                                               <small class="text-muted">
                                                Already Have An Account? <a class="ml-2" href="#">Sign In</a>
                                                 </small>
                                             </div>
                                            </div>
                                  {% endblock content %}







                 



              

      


